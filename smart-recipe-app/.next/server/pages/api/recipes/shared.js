"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/recipes/shared";
exports.ids = ["pages/api/recipes/shared"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Frecipes%2Fshared&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Crecipes%5Cshared.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Frecipes%2Fshared&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Crecipes%5Cshared.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_recipes_shared_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\recipes\\shared.ts */ \"(api)/./src/pages/api/recipes/shared.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_recipes_shared_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_recipes_shared_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/recipes/shared\",\n        pathname: \"/api/recipes/shared\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_recipes_shared_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlY2lwZXMlMkZzaGFyZWQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1Q3JlY2lwZXMlNUNzaGFyZWQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDa0U7QUFDbEU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDZEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw2REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC1yZWNpcGUtZ2VuZXJhdG9yLWxvY2FsLz9mMmJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXHJlY2lwZXNcXFxcc2hhcmVkLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcmVjaXBlcy9zaGFyZWRcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZWNpcGVzL3NoYXJlZFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Frecipes%2Fshared&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Crecipes%5Cshared.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/apiMiddleware.ts":
/*!**********************************!*\
  !*** ./src/lib/apiMiddleware.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiMiddleware: () => (/* binding */ apiMiddleware),\n/* harmony export */   getPaginationParams: () => (/* binding */ getPaginationParams),\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   logRequest: () => (/* binding */ logRequest),\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit),\n/* harmony export */   sendSuccess: () => (/* binding */ sendSuccess),\n/* harmony export */   validateBody: () => (/* binding */ validateBody)\n/* harmony export */ });\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(api)/./src/lib/auth.ts\");\n\n/**\r\n * API middleware that handles common functionality like:\r\n * - HTTP method validation\r\n * - Authentication\r\n * - Error handling\r\n * - CORS headers\r\n */ const apiMiddleware = (allowedMethods, handler, requireAuth = true)=>{\n    return async (req, res)=>{\n        // Set CORS headers\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n        res.setHeader(\"Access-Control-Allow-Methods\", allowedMethods.join(\", \"));\n        res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n        // Handle preflight requests\n        if (req.method === \"OPTIONS\") {\n            res.status(200).end();\n            return;\n        }\n        // Check if method is allowed\n        if (!allowedMethods.includes(req.method || \"\")) {\n            res.status(405).json({\n                error: `Method ${req.method} not allowed`\n            });\n            return;\n        }\n        try {\n            let user = null;\n            // Check authentication if required\n            if (requireAuth) {\n                user = await (0,_auth__WEBPACK_IMPORTED_MODULE_0__.authenticateRequest)(req);\n                if (!user) {\n                    res.status(401).json({\n                        error: \"Authentication required\"\n                    });\n                    return;\n                }\n            }\n            // Call the actual handler\n            await handler(req, res, user);\n        } catch (error) {\n            console.error(\"API Error:\", error);\n            // Handle different types of errors\n            if (error instanceof Error) {\n                if (error.message.includes(\"validation\")) {\n                    res.status(400).json({\n                        error: error.message\n                    });\n                } else if (error.message.includes(\"not found\")) {\n                    res.status(404).json({\n                        error: error.message\n                    });\n                } else if (error.message.includes(\"unauthorized\")) {\n                    res.status(403).json({\n                        error: error.message\n                    });\n                } else {\n                    res.status(500).json({\n                        error: \"Internal server error\"\n                    });\n                }\n            } else {\n                res.status(500).json({\n                    error: \"Internal server error\"\n                });\n            }\n        }\n    };\n};\n/**\r\n * Rate limiting middleware (simple in-memory implementation)\r\n * For production, consider using Redis or a proper rate limiting service\r\n */ const rateLimitMap = new Map();\nconst rateLimit = (maxRequests = 100, windowMs = 15 * 60 * 1000)=>{\n    return (req, res, next)=>{\n        const identifier = req.headers[\"x-forwarded-for\"] || req.connection.remoteAddress || \"unknown\";\n        const key = `${identifier}-${req.url}`;\n        const now = Date.now();\n        const record = rateLimitMap.get(key);\n        if (!record || now > record.resetTime) {\n            // Reset or create new record\n            rateLimitMap.set(key, {\n                count: 1,\n                resetTime: now + windowMs\n            });\n            next();\n        } else if (record.count < maxRequests) {\n            // Increment count\n            record.count++;\n            next();\n        } else {\n            // Rate limit exceeded\n            res.status(429).json({\n                error: \"Too many requests\",\n                retryAfter: Math.ceil((record.resetTime - now) / 1000)\n            });\n        }\n    };\n};\n/**\r\n * Validation middleware for request body\r\n */ const validateBody = (schema)=>{\n    return (req, res, next)=>{\n        try {\n            // Simple validation - in production, use a library like Joi or Yup\n            const { error } = schema.validate(req.body);\n            if (error) {\n                res.status(400).json({\n                    error: error.details[0].message\n                });\n                return;\n            }\n            next();\n        } catch (error) {\n            res.status(400).json({\n                error: \"Invalid request body\"\n            });\n        }\n    };\n};\n/**\r\n * Logging middleware\r\n */ const logRequest = (req, res, next)=>{\n    const start = Date.now();\n    const { method, url } = req;\n    console.log(`[${new Date().toISOString()}] ${method} ${url} - Started`);\n    // Override res.end to log completion\n    const originalEnd = res.end;\n    res.end = function(...args) {\n        const duration = Date.now() - start;\n        console.log(`[${new Date().toISOString()}] ${method} ${url} - ${res.statusCode} (${duration}ms)`);\n        return originalEnd.apply(this, args);\n    };\n    next();\n};\n/**\r\n * Error handling utility\r\n */ const handleApiError = (error, res)=>{\n    console.error(\"API Error:\", error);\n    if (error.name === \"ValidationError\") {\n        res.status(400).json({\n            error: error.message\n        });\n    } else if (error.name === \"CastError\") {\n        res.status(400).json({\n            error: \"Invalid ID format\"\n        });\n    } else if (error.code === 11000) {\n        res.status(409).json({\n            error: \"Duplicate entry\"\n        });\n    } else {\n        res.status(500).json({\n            error: \"Internal server error\"\n        });\n    }\n};\n/**\r\n * Success response utility\r\n */ const sendSuccess = (res, data, message)=>{\n    res.status(200).json({\n        success: true,\n        message: message || \"Operation successful\",\n        data\n    });\n};\n/**\r\n * Pagination utility\r\n */ const getPaginationParams = (req)=>{\n    const page = parseInt(req.query.page) || 1;\n    const limit = Math.min(parseInt(req.query.limit) || 10, 100); // Max 100 items per page\n    const skip = (page - 1) * limit;\n    return {\n        page,\n        limit,\n        skip\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/apiMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticateRequest: () => (/* binding */ authenticateRequest),\n/* harmony export */   clearAuthCookie: () => (/* binding */ clearAuthCookie),\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   getTokenFromRequest: () => (/* binding */ getTokenFromRequest),\n/* harmony export */   getUserFromToken: () => (/* binding */ getUserFromToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidPassword: () => (/* binding */ isValidPassword),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   setAuthCookie: () => (/* binding */ setAuthCookie),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prisma */ \"(api)/./src/lib/prisma.ts\");\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-secret-key-change-this\";\nconst BCRYPT_ROUNDS = parseInt(process.env.BCRYPT_ROUNDS || \"12\");\n// Hash password\nconst hashPassword = async (password)=>{\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().hash(password, BCRYPT_ROUNDS);\n};\n// Verify password\nconst verifyPassword = async (password, hashedPassword)=>{\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().compare(password, hashedPassword);\n};\n// Generate JWT token\nconst generateToken = (user)=>{\n    const payload = {\n        userId: user.id,\n        email: user.email,\n        name: user.name\n    };\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign(payload, JWT_SECRET, {\n        expiresIn: \"7d\"\n    });\n};\n// Verify JWT token\nconst verifyToken = (token)=>{\n    try {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n    } catch (error) {\n        return null;\n    }\n};\n// Get user from token\nconst getUserFromToken = async (token)=>{\n    try {\n        const payload = verifyToken(token);\n        if (!payload) return null;\n        const user = await _prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user.findUnique({\n            where: {\n                id: payload.userId\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                image: true,\n                isActive: true\n            }\n        });\n        if (!user || !user.isActive) return null;\n        return {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            image: user.image || undefined\n        };\n    } catch (error) {\n        return null;\n    }\n};\n// Extract token from request\nconst getTokenFromRequest = (req)=>{\n    // Check Authorization header\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith(\"Bearer \")) {\n        return authHeader.substring(7);\n    }\n    // Check cookies\n    const token = req.cookies[\"auth-token\"] || req.cookies.token;\n    if (token) {\n        return token;\n    }\n    return null;\n};\n// Middleware to authenticate requests\nconst authenticateRequest = async (req)=>{\n    const token = getTokenFromRequest(req);\n    if (!token) return null;\n    return getUserFromToken(token);\n};\n// Create user account\nconst createUser = async (email, password, name)=>{\n    // Check if user already exists\n    const existingUser = await _prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user.findUnique({\n        where: {\n            email: email.toLowerCase()\n        }\n    });\n    if (existingUser) {\n        throw new Error(\"User already exists\");\n    }\n    // Hash password\n    const hashedPassword = await hashPassword(password);\n    // Create user\n    const user = await _prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user.create({\n        data: {\n            email: email.toLowerCase(),\n            password: hashedPassword,\n            name,\n            isActive: true,\n            role: \"user\",\n            preferences: {\n                dietaryRestrictions: [],\n                favoriteIngredients: [],\n                cookingSkillLevel: \"intermediate\",\n                notifications: {\n                    email: true,\n                    push: true\n                }\n            },\n            stats: {\n                recipesGenerated: 0,\n                recipesLiked: 0,\n                recipesShared: 0,\n                lastActiveAt: new Date()\n            }\n        }\n    });\n    return {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        image: user.image || undefined\n    };\n};\n// Login user\nconst loginUser = async (email, password)=>{\n    // Find user\n    const user = await _prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user.findUnique({\n        where: {\n            email: email.toLowerCase()\n        }\n    });\n    if (!user) {\n        throw new Error(\"Invalid credentials\");\n    }\n    // Verify password\n    const isValidPassword = await verifyPassword(password, user.password);\n    if (!isValidPassword) {\n        throw new Error(\"Invalid credentials\");\n    }\n    // Update last active\n    await _prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user.update({\n        where: {\n            id: user.id\n        },\n        data: {\n            stats: {\n                ...user.stats || {},\n                lastActiveAt: new Date()\n            }\n        }\n    });\n    const authUser = {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        image: user.image || undefined\n    };\n    const token = generateToken(authUser);\n    return {\n        user: authUser,\n        token\n    };\n};\n// Validate email format\nconst isValidEmail = (email)=>{\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n};\n// Validate password strength\nconst isValidPassword = (password)=>{\n    if (password.length < 8) {\n        return {\n            valid: false,\n            message: \"Password must be at least 8 characters long\"\n        };\n    }\n    if (!/(?=.*[a-z])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one lowercase letter\"\n        };\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one uppercase letter\"\n        };\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one number\"\n        };\n    }\n    return {\n        valid: true\n    };\n};\n// Set auth cookie\nconst setAuthCookie = (res, token)=>{\n    res.setHeader(\"Set-Cookie\", [\n        `auth-token=${token}; HttpOnly; Path=/; Max-Age=${7 * 24 * 60 * 60}; SameSite=Lax${ false ? 0 : \"\"}`\n    ]);\n};\n// Clear auth cookie\nconst clearAuthCookie = (res)=>{\n    res.setHeader(\"Set-Cookie\", [\n        \"auth-token=; HttpOnly; Path=/; Max-Age=0; SameSite=Lax\"\n    ]);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(api)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBRTlDLE1BQU1DLGtCQUFrQkM7QUFJakIsTUFBTUMsU0FBU0YsZ0JBQWdCRSxNQUFNLElBQUksSUFBSUgsd0RBQVlBLEdBQUc7QUFFbkUsSUFBSUksSUFBeUIsRUFBY0gsZ0JBQWdCRSxNQUFNLEdBQUdBO0FBRXBFLGlFQUFlQSxNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtcmVjaXBlLWdlbmVyYXRvci1sb2NhbC8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/IG5ldyBQcmlzbWFDbGllbnQoKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWE7XG5cbmV4cG9ydCBkZWZhdWx0IHByaXNtYTtcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/recipes/shared.ts":
/*!*****************************************!*\
  !*** ./src/pages/api/recipes/shared.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_apiMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/apiMiddleware */ \"(api)/./src/lib/apiMiddleware.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/prisma */ \"(api)/./src/lib/prisma.ts\");\n\n\nconst handler = async (req, res, user)=>{\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            success: false,\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { id } = req.query;\n        // If ID is provided, fetch single recipe\n        if (id && typeof id === \"string\") {\n            console.log(\"=== FETCH SINGLE SHARED RECIPE DEBUG ===\");\n            console.log(\"Recipe ID:\", id);\n            console.log(\"Current user ID:\", user?.id);\n            const recipe = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].recipe.findFirst({\n                where: {\n                    id: id,\n                    isShared: true\n                },\n                select: {\n                    id: true,\n                    name: true,\n                    ingredients: true,\n                    instructions: true,\n                    dietaryPreference: true,\n                    additionalInformation: true,\n                    tags: true,\n                    userId: true,\n                    createdAt: true,\n                    sharedAt: true,\n                    likes: true,\n                    likesCount: true,\n                    user: {\n                        select: {\n                            id: true,\n                            name: true\n                        }\n                    }\n                }\n            });\n            if (!recipe) {\n                return res.status(404).json({\n                    success: false,\n                    message: \"Recipe not found or not shared\"\n                });\n            }\n            const currentUserId = user?.id;\n            const isLikedByCurrentUser = currentUserId ? (recipe.likes || []).includes(currentUserId) : false;\n            const isOwnRecipe = currentUserId === recipe.userId;\n            const recipeWithUserInfo = {\n                id: recipe.id,\n                name: recipe.name,\n                ingredients: recipe.ingredients,\n                instructions: recipe.instructions,\n                dietaryPreference: recipe.dietaryPreference,\n                additionalInformation: recipe.additionalInformation,\n                tags: recipe.tags,\n                userId: recipe.userId,\n                createdAt: recipe.createdAt,\n                sharedAt: recipe.sharedAt,\n                likes: recipe.likes,\n                likesCount: recipe.likesCount || 0,\n                user: recipe.user,\n                isLikedByCurrentUser,\n                isOwnRecipe\n            };\n            return res.status(200).json({\n                success: true,\n                recipe: recipeWithUserInfo\n            });\n        }\n        console.log(\"=== FETCH SHARED RECIPES DEBUG ===\");\n        console.log(\"Current user ID:\", user?.id);\n        // Fetch shared recipes with user information, sorted by shared date (newest first)\n        // Limit to 20 recipes for performance\n        const recipes = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].recipe.findMany({\n            where: {\n                isShared: true\n            },\n            orderBy: {\n                sharedAt: \"desc\"\n            },\n            take: 20,\n            select: {\n                id: true,\n                name: true,\n                ingredients: true,\n                instructions: true,\n                dietaryPreference: true,\n                additionalInformation: true,\n                userId: true,\n                sharedAt: true,\n                likes: true,\n                likesCount: true,\n                user: {\n                    select: {\n                        name: true\n                    }\n                }\n            }\n        });\n        console.log(\"Found shared recipes count:\", recipes.length);\n        console.log(\"Shared recipes:\", recipes.map((r)=>({\n                id: r.id,\n                name: r.name,\n                userId: r.userId,\n                sharedAt: r.sharedAt\n            })));\n        // Process recipes to add user-specific information\n        const recipesWithUsers = recipes.map((recipe)=>{\n            const currentUserId = user?.id;\n            const isLikedByCurrentUser = currentUserId ? (recipe.likes || []).includes(currentUserId) : false;\n            const isOwnRecipe = currentUserId === recipe.userId;\n            console.log(`Recipe ${recipe.name}: User ${recipe.user?.name || \"Anonymous\"}, isOwnRecipe: ${isOwnRecipe}`);\n            return {\n                id: recipe.id,\n                name: recipe.name,\n                ingredients: recipe.ingredients,\n                instructions: recipe.instructions,\n                dietaryPreference: recipe.dietaryPreference,\n                additionalInformation: recipe.additionalInformation,\n                userId: recipe.userId,\n                sharedAt: recipe.sharedAt,\n                likes: recipe.likes,\n                likesCount: recipe.likesCount || 0,\n                userName: recipe.user?.name || \"Anonymous\",\n                isLikedByCurrentUser,\n                isOwnRecipe\n            };\n        });\n        console.log(\"Final recipes with users count:\", recipesWithUsers.length);\n        res.status(200).json({\n            success: true,\n            recipes: recipesWithUsers\n        });\n    } catch (error) {\n        console.error(\"Fetch shared recipes error:\", error);\n        res.status(500).json({\n            success: false,\n            message: \"Failed to fetch shared recipes\"\n        });\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_lib_apiMiddleware__WEBPACK_IMPORTED_MODULE_0__.apiMiddleware)([\n    \"GET\"\n], handler, true)); // Authentication required to check likes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/recipes/shared.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Frecipes%2Fshared&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Crecipes%5Cshared.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();